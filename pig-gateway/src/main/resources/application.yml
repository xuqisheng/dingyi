server:
  port: 9999
  undertow:
    io-threads: 4
    worker-threads: 32

spring:
  application:
    name: pig-gateway
  profiles:
    active: dev
  http:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB
  zipkin:
    rabbitmq:
      queue: zipkin
  sleuth:
    sampler:
      percentage: 0.2
logging:
  level: info

#加密配置
jasypt:
  encryptor:
    password: lengleng



#监控短点配置
management:
  security:
    enabled: false
endpoints:
  actuator:
    enabled: true
  shutdown:
    enabled: false

eureka:
  auth:
    username: pig
    password: gip6666
    port: 1025
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 20
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
  client:
    registry-fetch-interval-seconds: 10

redis:
  cache:
    expiration: 3601
zuul:
  ribbon:
    #  饥饿加载
    eager-load:
      enabled: true
      clients: pig-auth,pig-upms-service
  ignoredServices: '*'
  host:
    connect-timeout-millis: 5000
    socket-timeout-millis: 5000
  #    限流配置
  ratelimit:
    key-prefix: pig-ratelimite
    enabled: true
    repository: REDIS
    behind-proxy: true

ribbon:
  eager-load:
    enabled: true
    clients: pig-auth,pig-upms-service
  Httpclient:
    enabled: false
  OkHttp:
    enabled: true
  ReadTimeout: 10000
  ConnectTimeout: 10000

feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
  client:
    config:
      feignName:
        connectTimeout: 30000
        readTimeout: 30000
  compression:
    request:
      enabled: true
    response:
      enabled: true

hystrix:
  threadpool:
    default:
      coreSize: 500
      maxQueueSize: 1000
      queueSizeRejectionThreshold: 800
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

ignore:
  urls:
    - /mobile/**
    - /auth/**
    - /admin/code/*
    - /admin/smsCode/*
    - /admin/user/info
    - /admin/menu/userMenu
    - /swagger-resources/**
    - /swagger-ui.html
    - /*/v2/api-docs
    - /swagger/api-docs
    - /webjars/**
    - /ydservice/yd/**
    - /ydbase/**
    - /ydsms/**
    - /ydservice/sms/alipay_notify
    - /ydservice/login/reset/password/code/send
    - /ydservice/login/reset/password/code/verify
    - /ydservice/login/reset/password
  clients:
    - app




### 开发环境 ###

---
spring:
  profiles: dev
  redis:
    remote: false        #cachecloud 获取
    host: 192.168.3.202
    port: 6379
    pool:
      max-active: 100
      max-idle: 20
  rabbitmq:
    host: 192.168.3.202
    port: 5672
eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@localhost:${eureka.auth.port}/eureka


#认证服务器地址
security:
  auth:
    server: http://localhost:3000
  validate:
    code: false # 验证码开关 测试环境先关闭
    preview: false
  sessions: stateless
  oauth2:
    client:
      client-id: pig
      client-secret: pig
    resource:
      jwt:
        key-uri: ${security.auth.server}/oauth/token_key #解析jwt令牌所需要密钥的地址

zuul:
  ratelimit:
    #  针对所有路由的策略
    default-policy:
      limit: 600000 #可选 - 每个刷新时间窗口对应的请求数量限制
      quota: 6000 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
      refresh-interval: 60 # 刷新时间窗口的时间，默认值 (秒)
      type: #可选 限流方式  - user  - origin  - url
        - ORIGIN
        - USER
        - URL
    # 特定路由配置
    policies:
      pig-auth:
        #      单位时间内允许访问的个数
        limit: 1000
        #        单位时间内允许访问的总时间（用于统计每次请求的综合时间）
        quota: 10
        #        单位时间
        refresh-interval: 60
        type: #可选 限流方式  - user(认证用户、匿名用户)  - origin(ip)  - url(path)
          - ORIGIN
          - USER
          - URL
### 测试环境
---
spring:
  profiles: test
  redis:
    remote: false        #cachecloud 获取
    host: 192.168.3.202
    port: 6379
    password:
    pool:
      max-active: 100
      max-idle: 20
  rabbitmq:
    host: 192.168.3.202
    port: 5672
    username: guest
    password: guest
eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
      #      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@server1:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server2:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server3:${eureka.auth.port}/eureka/
      defaultZone: http://pig:gip6666@192.168.3.204:1025/eureka/

#认证服务器地址
#security
#  auth:
#    server: http://192.168.3.204:3000
#  validate:
#    code: false # 验证码开关 测试环境先关闭
#    preview: false
#  sessions: stateless
#  oauth2:
#    client:
#      client-id: pig
#      client-secret: pig
#    resource:
#      jwt:
#        key-uri: http://192.168.3.204:3000/oauth/token_key #解析jwt令牌所需要密钥的地址

zuul:
  ratelimit:
    #  针对所有路由的策略
    default-policy:
      limit: 6000 #可选 - 每个刷新时间窗口对应的请求数量限制
      quota: 600 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
      refresh-interval: 60 # 刷新时间窗口的时间，默认值 (秒)
      type: #可选 限流方式  - user  - origin  - url
        - ORIGIN
        - USER
        - URL
    # 特定路由配置
    policies:
      pig-auth:
        #      单位时间内允许访问的个数
        limit: 60000
        #        单位时间内允许访问的总时间（用于统计每次请求的综合时间）
        quota: 60
        #        单位时间
        refresh-interval: 60
        type: #可选 限流方式  - user(认证用户、匿名用户)  - origin(ip)  - url(path)
          - ORIGIN
          - USER
          - URL

### 生产环境

---

spring:
  profiles: prod
  redis:
    remote: false        #cachecloud 获取
    host: yd-cloud.redis.rds.aliyuncs.com
    port: 6379
    password: FCfpyZBb6421
    pool:
      max-active: 100
      max-idle: 20
  rabbitmq:
    host: 47.97.41.16 #${host.ydserver1}
    port: 5672
    #    username: guest
    #    password: lA8jT8N4Cq64
    username: pig
    password: 7tm5Uo7Pi0mk
eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@server1:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server2:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server3:${eureka.auth.port}/eureka/

#认证服务器地址
security:
  auth:
    server: http://47.97.41.16:3000
  validate:
    code: false # 验证码开关 测试环境先关闭
    preview: false
  sessions: stateless
  oauth2:
    client:
      client-id: pig
      client-secret: pig
    resource:
      jwt:
        key-uri: ${security.auth.server}/oauth/token_key #解析jwt令牌所需要密钥的地址

zuul:
  ratelimit:
    #  针对所有路由的策略
    default-policy:
      limit: 6000 #可选 - 每个刷新时间窗口对应的请求数量限制
      quota: 600 #可选-  每个刷新时间窗口对应的请求时间限制（秒）
      refresh-interval: 60 # 刷新时间窗口的时间，默认值 (秒)
      type: #可选 限流方式  - user  - origin  - url
        - ORIGIN
        - USER
        - URL
    # 特定路由配置
    policies:
      pig-auth:
        #      单位时间内允许访问的个数
        limit: 60000
        #        单位时间内允许访问的总时间（用于统计每次请求的综合时间）
        quota: 60
        #        单位时间
        refresh-interval: 60
        type: #可选 限流方式  - user(认证用户、匿名用户)  - origin(ip)  - url(path)
          - ORIGIN
          - USER
          - URL
