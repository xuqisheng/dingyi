server:
  port: 9006
  undertow:
    io-threads: 4
    worker-threads: 32

spring:
  application:
    name: pig-yd-sms
  profiles:
    active: dev
  zipkin:
    rabbitmq:
      queue: zipkin
  sleuth:
    sampler:
      percentage: 0.2
  http:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB


mybatis-plus:
  # 如果是放在src/main/java目录下 classpath:/com/yourpackage/*/mapper/*Mapper.xml
  # 如果是放在resource目录 classpath:/mapper/*Mapper.xml
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.zhidianfan.pig.**.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 2
    #驼峰下划线转换
    db-column-underline: true
    #mp2.3+ 全局表前缀 mp_
    #table-prefix: mp_
    #刷新mapper 调试神器
    #refresh-mapper: true
    #数据库大写下划线转换
    capital-mode: true
    # Sequence序列接口实现类配置
    #    key-generator: com.baomidou.mybatisplus.incrementer.OracleKeyGenerator
    #逻辑删除配置（下面3个配置）
    logic-delete-value: 1
    logic-not-delete-value: 0
    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
    #自定义填充策略接口实现
  #    meta-object-handler: com.baomidou.springboot.MyMetaObjectHandler
  configuration:
    #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as（没开启这个，SQL需要写as： select user_id as userId）
    map-underscore-to-camel-case: true
    cache-enabled: false
    #配置JdbcTypeForNull, oracle数据库必须配置
#    jdbc-type-for-null: 'null'


#加密配置
jasypt:
  encryptor:
    password: lengleng

redis:
  cache:
    expiration: 3601



eureka:
  auth:
    username: pig
    password: gip6666
    port: 1025
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 20
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
  client:
    registry-fetch-interval-seconds: 10

ribbon:
  Httpclient:
    enabled: false
  OkHttp:
    enabled: true
  ReadTimeout: 10000
  ConnectTimeout: 10000

feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
  client:
    config:
      feignName:
        connectTimeout: 30000
        readTimeout: 30000
  compression:
    request:
      enabled: true
    response:
      enabled: true

hystrix:
  threadpool:
    default:
      coreSize: 500
      maxQueueSize: 1000
      queueSizeRejectionThreshold: 800
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

#监控短点配置
management:
  security:
    #  关闭安全认证
    enabled: false
endpoints:
  actuator:
    enabled: true
  shutdown:
    #  开启优雅关闭
    enabled: true
    #    平常不暴露端口到外网
    path: /shutdown

# 用户配置
yd:
  #  创蓝短信配置
  cl:
    url: http://smssh1.253.com/msg/send/json
    #    普通账号
    account: N8821373
    password: vnsr9tzcF
    #    营销账号
    yxaccount: M1297871
    yxpassword: r8jtaF2wh
  lx:
    #    返回格式为xml
    #    url: http://cf.51welink.com/submitdata/service.asmx/g_Submit
    #    返回格式为json
    url: http://api.51welink.com/json/sms/g_Submit
    #    提交账户和密码
    sname: dlzhanglong1
    spwd: dlzhanglong123
    #    企业代码（扩展号，不确定请赋值空）
    scorpid:
    #    产品编号 行业通知短信
    sprdid: 1012808
    #    产品编号 会员营销短信
    yxsprdid: 1012812
  # dev与测试环境 短信配置成功或者失败
  flag: success
### 开发环境 ###

---
spring:
  profiles: dev
  datasource:
    #  使用高性能数据源
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: 123456
    url: jdbc:mysql://localhost:3306/yiding_sms?useSSL=false&autoReconnect=true&useUnicode=true&characterEncoding=utf8
    hikari:
      minimum-idle: 1
      maximum-pool-size: 5
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 120000
      connection-timeout: 30000
      connection-test-query: SELECT 1
      connection-init-sql: set names utf8mb4
  redis:
    remote: false        #cachecloud 获取
    host: 127.0.0.1
    port: 6379
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: pig
    password: pig

eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@localhost:${eureka.auth.port}/eureka

yd:
  sms:
    url: http://127.0.0.1:9095/message/callback

### 测试环境 ###

---

spring:
  profiles: test
  datasource:
    #  使用高性能数据源
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
    username: root
    password: 123456
    url: jdbc:mysql://mysqlhost:3306/yiding_sms?useSSL=false&autoReconnect=true&useUnicode=true&characterEncoding=utf8
    hikari:
      minimum-idle: 15
      maximum-pool-size: 250
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 40000
      connection-timeout: 30000
      validation-timeout: 3000
      connection-test-query: SELECT 1
      connection-init-sql: set names utf8mb4
  redis:
    remote: false        #cachecloud 获取
    host: redishost
    port: 6379
    password:
  rabbitmq:
    host: rabbithost
    port: 5672
    username: guest
    password: guest
yd:
  task: false  #定时任务
  xms:
    times: 90
  sms:
    url: http://mw.zhidianfan.com:9095/message/callback

eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@server1:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server2:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server3:${eureka.auth.port}/eureka/


### 生产环境 ###

---

spring:
  profiles: prod
  datasource:
    #  使用高性能数据源
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.jdbc.Driver
    username: pig
    password: sUTh4HRcy5i3
    url: jdbc:mysql://yiding-default.rwlb.rds.aliyuncs.com:3306/yiding_sms?useSSL=false&autoReconnect=true&useUnicode=true&characterEncoding=utf8
    hikari:
      minimum-idle: 15
      maximum-pool-size: 250
      idle-timeout: 30000
      pool-name: DatebookHikariCP
      max-lifetime: 40000
      connection-timeout: 30000
      validation-timeout: 3000
      connection-test-query: SELECT 1
      connection-init-sql: set names utf8mb4
  redis:
    remote: false        #cachecloud 获取
    host: 172.16.100.64
    port: 6379
    password: 8oSKhxdw6T35
  rabbitmq:
    host: 172.16.100.64 #${host.ydserver1}
    port: 5672
    username: yiding
    password: fa80UAn1G4Q9
yd:
  task: true  #定时任务
  xms:
    times: 90
  sms:
    url: http://172.16.23.160:10001/message/callback

eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@server1:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server2:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server3:${eureka.auth.port}/eureka/

