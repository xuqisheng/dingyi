<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhidianfan.pig.yd.moduler.common.dao.mapper.BusinessAppuserStatisticsMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.zhidianfan.pig.yd.moduler.common.dao.entity.BusinessAppuserStatistics">
        <id column="id" property="id" />
        <result column="year_month" property="yearMonth" />
        <result column="business_id" property="businessId" />
        <result column="business_name" property="businessName" />
        <result column="app_user_id" property="appUserId" />
        <result column="app_user_name" property="appUserName" />
        <result column="payamount" property="payamount" />
        <result column="resv_batch_count" property="resvBatchCount" />
        <result column="resv_table_count" property="resvTableCount" />
        <result column="pay_batch_count" property="payBatchCount" />
        <result column="pay_table_count" property="payTableCount" />
        <result column="pay_3tables_batch_count" property="pay3tablesBatchCount" />
        <result column="avg_batch_payamount" property="avgBatchPayamount" />
        <result column="avg_table_payamount" property="avgTablePayamount" />
        <result column="avg_custom_payamount" property="avgCustomPayamount" />
        <result column="cancel_ratio" property="cancelRatio" />
        <result column="seat_custom_num_ratio" property="seatCustomNumRatio" />
        <result column="valid_vip_count" property="validVipCount" />
        <result column="new_vip_count" property="newVipCount" />
        <result column="awaken_vip_count" property="awakenVipCount" />
        <result column="cancel_table_count" property="cancelTableCount" />
        <result column="seat_custom_num" property="seatCustomNum" />
        <result column="max_custom_num" property="maxCustomNum" />
        <result column="created_at" property="createdAt" />
    </resultMap>


    <delete id="clearTodayStatistics" parameterType="map">
        delete from business_appuser_statistics where business_id=#{businessId} and `year_month` = #{lastYearMonth}
    </delete>

    <update id="dropTemporaryTable">
	    DROP TABLE IF EXISTS t_business_appuser_statistics_temporary
    </update>

    <update id="createTemporaryTable">
        create table t_business_appuser_statistics_temporary
	    as
        select #{lastYearMonth} `year_month`,t.business_id,t.business_name,t.app_user_id,t.app_user_name,
        sum(payamount) payamount,sum(resv_batch_count) resv_batch_count,sum(resv_table_count) resv_table_count,
        sum(pay_batch_count) pay_batch_count,sum(pay_table_count) pay_table_count,sum(pay_table_count >= 3) pay_3tables_batch_count,
        sum(cancel_table_count) cancel_table_count,sum(valid_vip_count) valid_vip_count,
        sum(seat_custom_num) seat_custom_num,sum(max_custom_num) max_custom_num,
        if(sum(max_custom_num) !=0,format(sum(seat_custom_num_no_max)/sum(max_custom_num),4),0) seat_custom_num_ratio,
        if(sum(resv_table_count) != 0 , format(sum(cancel_table_count)/sum(resv_table_count),4),0) cancel_ratio,
        if(sum(new_pay_batch_count)!= 0 ,format(sum(payamount)/sum(new_pay_batch_count),0),0) avg_batch_payamount,
        if(sum(CASE WHEN payamount > 0 THEN  pay_table_count ELSE 0 END ) ,format(sum(payamount)/sum(CASE WHEN payamount > 0 THEN  pay_table_count ELSE 0 END ), 0 ), 0) avg_table_payamount,
        if(sum(case when payamount > 0 then cctv_seat_custom_num else 0 end) != 0 ,format(sum(payamount)/sum(case when payamount > 0 then cctv_seat_custom_num else 0 end),0) , 0) avg_custom_payamount
        from (select o.business_id,(select business_name from business where id = o.business_id) business_name,
        case when length(o.app_user_id)>0 then o.app_user_id else 0 end as app_user_id,
        case when length(o.app_user_id)>0 and app_user_id!=0 then (select app_user_name from app_user where id = app_user_id) else '预订台' end app_user_name,
        sum(ifnull(o.payamount,0)) payamount,
        count(distinct o.batch_no) resv_batch_count,
        count(o.resv_order) resv_table_count,
        count(distinct (case when o.status in (2,3) then o.batch_no else null end)) pay_batch_count,
        sum(o.status in (2,3)) pay_table_count,
        sum(o.status=4) cancel_table_count,
        ifnull(sum(if(ifnull(o.resv_num,0) > 100 ,100 , o.resv_num) * (o.status in (2,3))),0) seat_custom_num,
        ifnull(sum(if(ifnull(o.resv_num,0) > 100 ,100 , o.resv_num) * (o.status in (2,3)) * (o.max_people_num != 0)),0) seat_custom_num_no_max,
        ifnull(sum(ifnull(o.max_people_num,0) * (o.status in (2,3))),0) max_custom_num,
        count(distinct (case when o.status in (2,3) then o.vip_id else null end)) valid_vip_count,
        count( DISTINCT ( CASE WHEN o.payamount > 0 THEN CASE WHEN o.STATUS IN ( 2, 3 ) THEN o.batch_no ELSE NULL END ELSE NULL END )  ) new_pay_batch_count,
        CASE WHEN ifnull( sum( ifnull( o.actual_num, 0 ) * ( o.STATUS IN ( 2, 3 ) ) ), 0 ) > 0 THEN ifnull( sum( ifnull( o.actual_num, 0 ) * ( o.STATUS IN ( 2, 3 ) ) ), 0 ) ELSE ifnull( sum( ifnull( o.resv_num, 0 ) * ( o.STATUS IN ( 2, 3 ) ) ), 0 ) END as cctv_seat_custom_num
        from resv_order o
        where business_id= #{businessId}  and (vip_id!=0 and vip_id is not null)
        and ((app_user_id!=0 and app_user_id is not null) or (device_user_id!=0 and device_user_id is not null))
        and resv_date >=CONCAT(#{lastYearMonth},'-01') and resv_date &lt; CONCAT(#{yearMonth},'-01') and status not in (5,6)
        group by batch_no,business_name,app_user_id,app_user_name) t
        group by t.app_user_id,t.business_name,t.app_user_name

    </update>


    <insert id="insertAppuserStatistics">
        insert into business_appuser_statistics
        (`year_month`,business_id,business_name,app_user_id,app_user_name,payamount,resv_batch_count,resv_table_count,pay_batch_count,pay_table_count,pay_3tables_batch_count,
        avg_batch_payamount,avg_table_payamount,avg_custom_payamount,cancel_ratio,seat_custom_num_ratio,valid_vip_count,new_vip_count,awaken_vip_count,seat_custom_num,max_custom_num,created_at,
        cancel_table_count)
        select #{lastYearMonth},#{businessId},b.business_name,m.app_user_id,a.app_user_name,
        ifnull(v.payamount,0),ifnull(v.resv_batch_count,0),ifnull(v.resv_table_count,0),ifnull(v.pay_batch_count,0),ifnull(v.pay_table_count,0),ifnull(v.pay_3tables_batch_count,0),
        ifnull(v.avg_batch_payamount,0),ifnull(v.avg_table_payamount,0),ifnull(v.avg_custom_payamount,0),ifnull(v.cancel_ratio,0),ifnull(v.seat_custom_num_ratio,0),
        ifnull(v.valid_vip_count,0),ifnull(t.new_vip_count,0),ifnull(t.awaken_vip_count,0),ifnull(v.seat_custom_num,0),ifnull(v.max_custom_num,0),now(),ifnull(v.cancel_table_count,0)
        from t_business_appuser_statistics_temporary v
        LEFT JOIN
        (select vdt.business_id,vdt.app_user_id,sum(new_vip_count) new_vip_count,sum(awaken_vip_count) awaken_vip_count
        from vip_daily_trend vdt where vdt.business_id=#{businessId}
        and vdt.`date` >=CONCAT(#{lastYearMonth},'-01') and vdt.`date` &lt; CONCAT(#{yearMonth},'-01')
        group by date_format(vdt.date,'%Y-%m'),vdt.app_user_id
        ) t on t.business_id=v.business_id and t.app_user_id=v.app_user_id,
        business b,app_user a,app_user_business_mapping m
        where m.business_id=#{businessId} and  m.business_id=b.id and m.app_user_id=a.id and m.`status`=1
        and v.`year_month`=#{lastYearMonth} and v.business_id=m.business_id and v.app_user_id=m.app_user_id
        and DATE_ADD(b.due_date,INTERVAL b.delay_days DAY)>=CONCAT(#{lastYearMonth},'-01')

    </insert>

    <insert id="insertPadStatistics">
        insert into business_appuser_statistics
        (`year_month`,business_id,business_name,app_user_id,app_user_name,payamount,resv_batch_count,resv_table_count,pay_batch_count,pay_table_count,pay_3tables_batch_count,
        avg_batch_payamount,avg_table_payamount,avg_custom_payamount,cancel_ratio,seat_custom_num_ratio,valid_vip_count,new_vip_count,awaken_vip_count,seat_custom_num,max_custom_num,created_at,
        cancel_table_count)
        select #{lastYearMonth},#{businessId},(select business_name from business where id= #{businessId} ),0,'预订台',
        ifnull(v.payamount,0),ifnull(v.resv_batch_count,0),ifnull(v.resv_table_count,0),ifnull(v.pay_batch_count,0),ifnull(v.pay_table_count,0),ifnull(v.pay_3tables_batch_count,0),
        ifnull(v.avg_batch_payamount,0),ifnull(v.avg_table_payamount,0),ifnull(v.avg_custom_payamount,0),ifnull(v.cancel_ratio,0),ifnull(v.seat_custom_num_ratio,0),
        ifnull(v.valid_vip_count,0),0,0,ifnull(v.seat_custom_num,0),ifnull(v.max_custom_num,0),now(),ifnull(v.cancel_table_count,0)
        from t_business_appuser_statistics_temporary v
    where v.business_id=#{businessId} and v.app_user_id=0 and v.`year_month`=#{lastYearMonth}
        and exists (select 1 from business b where b.id=#{businessId} and DATE_ADD(b.due_date,INTERVAL b.delay_days DAY)>=CONCAT(#{lastYearMonth},'-01'))

    </insert>



</mapper>
