server:
  port: 3000
  undertow:
    io-threads: 4
    worker-threads: 32

spring:
  application:
    name: pig-auth
  profiles:
    active: dev
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    type: com.zaxxer.hikari.HikariDataSource
  freemarker:
    allow-request-override: false
    allow-session-override: false
    cache: true
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    enabled: true
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: true
    prefer-file-system-access: true
    suffix: .ftl
    template-loader-path: classpath:/templates/
  zipkin:
    rabbitmq:
      queue: zipkin
  http:
    multipart:
      max-file-size: 1000MB
      max-request-size: 1000MB

eureka:
  client:
    registry-fetch-interval-seconds: 10
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 20
    instance-id: ${spring.cloud.client.ipAddress}:${server.port}
  auth:
    username: pig
    password: gip6666
    port: 1025

redis:
  cache:
    expiration: 3601

ribbon:
  eager-load:
    enabled: true
    clients: pig-auth,pig-upms-service
  Httpclient:
    enabled: false
  OkHttp:
    enabled: true
  ReadTimeout: 10000
  ConnectTimeout: 10000

feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    enabled: false
  client:
    config:
      feignName:
        connectTimeout: 30000
        readTimeout: 30000
  compression:
    request:
      enabled: true
    response:
      enabled: true

hystrix:
  threadpool:
    default:
      coreSize: 500
      maxQueueSize: 1000
      queueSizeRejectionThreshold: 800
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

ignore:
  urls:
  - /authentication/**
  - /**/*.css
  - /social
  - /signin
  - /signup
  - /info
  - /health
  - /**
  - /metrics/**
  - /loggers/**
  - /mobile/token
#加密配置
jasypt:
  encryptor:
    password: lengleng


#监控短点配置
management:
  security:
    enabled: false
endpoints:
  actuator:
    enabled: true
  shutdown:
    enabled: false


### 开发运行环境，运行在idea中 ###
---

spring:
  profiles: dev
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://192.168.3.202:3306/pig?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
  redis:
    remote: false        #cachecloud 获取
    host: 192.168.3.202
    port: 6379
    pool:
      max-active: 100
      max-idle: 20
  rabbitmq:
    host: 192.168.3.202
    port: 5672
eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@localhost:${eureka.auth.port}/eureka

### 测试环境 ###
---
spring:
  profiles: test
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://192.168.3.202:3306/pig?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
  redis:
    remote: false        #cachecloud 获取
    host: 192.168.3.202
    port: 6379
    password:
    pool:
      max-active: 100
      max-idle: 20
  rabbitmq:
    host: 192.168.3.202
    port: 5672
    username: guest
    password: guest
eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
#      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@server1:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server2:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server3:${eureka.auth.port}/eureka/
      defaultZone: http://localhost:1025/eureka/


### 生产环境 ###

---

spring:
  profiles: prod
  datasource:
    username: pig
    password: s33ycHywIqa7
    url: jdbc:mysql://47.97.41.16:3306/pig?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
  redis:
    remote: false        #cachecloud 获取
    host: yd-cloud.redis.rds.aliyuncs.com
    port: 6379
    password: FCfpyZBb6421
    pool:
      max-active: 100
      max-idle: 20
  rabbitmq:
    host: 47.97.41.1
    port: 5672
    username: pig
    password: 7tm5Uo7Pi0mk
eureka:
  environment: ${spring.profiles}
  client:
    serviceUrl:
      defaultZone: http://${eureka.auth.username}:${eureka.auth.password}@server1:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server2:${eureka.auth.port}/eureka/,http://${eureka.auth.username}:${eureka.auth.password}@server3:${eureka.auth.port}/eureka/


